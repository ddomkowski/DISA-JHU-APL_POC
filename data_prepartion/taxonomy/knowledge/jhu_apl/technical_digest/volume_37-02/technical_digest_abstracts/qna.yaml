version: 3
domain: Technical Digest Abstracts
created_by: ddomkowski
seed_examples:
  - context: |
      APL develops and evaluates new human-machine teaming (HMT) technologies to augment the modern warfighter and to enable the United States to hold a competitive edge over current and future adversaries. HMT refers to collaboration between humans and complex technologies to achieve a specific goal, and it relies on three equally important elements: the human, the machine, and the interactions between them. Because HMT innovations are often a novel combination of existing technologies, components are frequently rapidly prototyped and integrated so that new ideas can be evaluated before too much time or money is invested in creating a final design. However, improvements to current HMT prototyping practices could lead to even more savings. In general, developing prototypes reduces costs because there is no concern with future modifications, extensions, or reuse when integrating components. Although this practice makes sense for most proof-of-concept efforts, HMT prototypes could benefit from these characteristics since many HMT concepts of operations share hardware and software components. Making these components modular and reusable could save costs across multiple prototyping efforts.
    questions_and_answers:
      - question: |
          What is human-maching teaming (HMT)?
        answer: |
          Collaboration between humans and complex technologies to achieve a specific goal, and it relies on three equally important elements: the human, the machine, and the interactions between them.
      - question: |
          What three components make up human-maching teaming (HMT)?
        answer: |
          The human, the machine, and the interactions between them. 
      - question: |
          How can HMT innovations save on development time and costs?
        answer: |
          Developing HMT prototypes could lead to cost and time savings since many HMT concepts of operations share hardware and software components. Making these components modular and reusable could save costs across multiple prototyping  efforts.
  - context: |
      To avoid these common pitfalls of prototyping, the Human-Machine Interfaces for Human-Machine Teaming (H4H) architecture facilitates component substitution and reuse while adding minimal design and implementation overhead. H4H's ultimate goal is to lower the time and cost required to integrate, modify, and extend HMT prototypes.
      ## H4H OVERVIEW
      H4H prototypes are built as a collection of small components serving distinct purposes. H4H's overall design goals are to ensure that these components can be replaced or updated as needed, to simplify or abstract the interfaces between them, and to enable reliable or semi-reliable transport of data across them. To achieve these goals, H4H uses an open microservices architecture and a publish-subscribe messaging framework built for distributed components communicating over User Datagram Protocol (UDP). The following subsections summarize the concepts and the reasoning behind the decisions that led to the final H4H design.
    questions_and_answers:
      - question: |
          What is H4H?
        answer: |
          The Human-Machine Interfaces for Human-Machine Teaming (H4H) is an architecture that facilitates component substitution and reuse while adding minimal design and implementation overhead. H4H's ultimate goal is to lower the time and cost required to integrate, modify, and extend HMT prototypes.
      - question: 
          What type of softwware components and frameworks does H4H promote?
        answer: |
          H4H implements a microservices architecture and a publish-subscribe messaging framework built for distributed components communicating over User Datagram Protocol (UDP).
      - question: |
          How does H4H avoid pitfalls of too much time and money required to build HMT systems?
        answer: |
          H4H facilitates component substitution and reuse while adding minimal design and 
          implementation overhead.
  - context: |
      Many kinds of services could be introduced into the architecture. Some examples are a database, a machine learning model, or an adapter for a new hardware component. Regardless of the functionality they provide, all services are essentially software that any prototyping team using H4H should be able to deploy. For this reason, H4H uses Docker, a containerization platform for packaging applications into standardized executable components called containers.$^{2}$ Docker enables service functionality to be wholly contained within a modular, shareable package in a way that is largely independent of the compute environment. If the packaged application works on one machine with Docker Engine, it should work on any other machine with a matching version of Docker Engine and the same CPU architecture (e.g., x86, ARM64). Packaged applications ready for execution, eferred to as container images, can be shared in a repository and downloaded on demand. Docker enables a long-term solution for creating, managing, and storing versiontracked capabilities across efforts and projects. Complementing the ability to containerize each service for easy execution, Kubernetes$^{3}$ provides a suite of powerful tools for managing the networking, monitoring service health,  or creating the support infrastructure for the deployed containers.
    questions_and_answers: 
      - question: |
          How would you summarize the possible components of H4H?
      - answer: |
          All services are essentially software that any prototyping team using H4H should be able to deploy regardless of the functionality they povide.
      - question: | 
          What is Docker?
        answer: |
          Docker is a containerization platform for packaging applications into standardized executable components called containers.$^{2}$ Docker enables service functionality to be wholly contained within a modular, shareable package in a way that is largely independent of the compute environment.
      - question: |
          How does Kubernetes enable easy execution of Docker container images?
        answer: |
          Kubernetes provides a suite of powerful tools for managing the networking, monitoring service health, or creating the support infrastructure for the deployed containers.
  - context: |
      ## ASSURED UBIQUITOUS COMMUNICATIONS
      Ashutosh Dutta and Nancy F. Andersen
      What is going to happen 20 years from now? We are keeping track of what is happening in the world, and we are asking how we can divide communication that can have different verticals-not only military but commercial, agriculture, and health. Communication is the fabric, and we have to develop a fabric that will help evolve this concept.
      Three examples are presented here. The first example is communication at a futuristic scale (Figure 24). This example assumes a lot of data, different kinds of networks-low Earth orbit (LEO) and medium Earth orbit (MEO) satellites, different types of cellular networks, and Wi-Fi-and a first responder as the user. The first responder arrives at the scene and starts communicating using cellular communication, perhaps 4G or 5G, and then a hurricane, or some other catastrophic event, affects cellular communication and the tower becomes nonoperational.
      At that point, this first responder is communicating with a doctor and is trying to treat a patient. The first responder must be able to seamlessly switch over to Wi-Fi and still maintain priority service for communication. Then the first responder rides with the patient
      Figure 23. APL revolutionizing mission space via human-machine teaming in 20 years.
      <!-- image -->
      in an ambulance to a helipad and must switch back to cellular when the Wi-Fi network is out of range. Once the helicopter is en route to the hospital, communication switches again, this time to satellite communications. This scenario illustrates handoffs between different types of wireless communication technologies, namely cellular, Wi-Fi, UAVs, and satellite. This communication must be ubiquitous, and secure at the same time, because it may be transmitting patient data and other sensitive information.
      How can we make sure the future communication infrastructure is distributed, resilient, and adaptable? There may be a surge of data, so how can we scale the network up and down to support the surge without affecting the quality of service?   
    
    questions_and_answers:
      - question:
          What do Ashutosh Dutta and Nancy F. Andersen summarize in the technical digest?
      - answer:
          Ashutosh Dutta and Nancy F. Andersen, in their article, "Ubiquitous Communication," develop a method for communicating across military and commercial verticals as communication grows on a futuristic scale.
      - question: |
          What makes future communication challenging according to APL?
        answer: |
          In their article, "Ubiquitous Communication," Ashutosh Dutta and Nancy F. Andersen, the authors describe challenges of communication at a futuristic scale. In example of a first responder, the scenario assumes a lot of data, different kinds of networks-low Earth orbit (LEO) and medium Earth orbit (MEO) satellites, different types of cellular networks, and Wi-Fi-and a first responder as the user. Scenarios such as these may require the network to scale up and down to support the surge of data without affecting the quality of service.
      - question: 
          Why must communication be ubiquitous and secure in the future?
        answer: |
          In their article, "Ubiquitous Communication," Ashutosh Dutta and Nancy F. Andersen describe the scenario of a frist responder and how their communications need to traverse networks, their communication must be ubiquitous, and secure at the same time, because it may be transmitting complex patient data and other sensitive information.The authors argue that future communication infrastructure will need to be distributed, resilient, and adaptable to scale for future needs.

document_outline: |
  The Johns Hopkins APL Technical Digest is an unclassified, online technical journal published quarterly by APL. The objective of the publication is to communicate the work performed at the Laboratory to its sponsors and to the scientific and engineering communities, defense establishment, academia, and industry. 
document:
  repo: https://github.com/ddomkowski/DISA-JHU-APL_POC.git
  commit: 9480d69f2022c6650871fa037596ebe21a26bb86
  patterns:
    - 'documents_converted/37-02-FullBook.md'